<?php

class CRUD{

    private $db;

    public function __construct($conn){
        $this->db = $conn;
    }

   // Insert
    public function insert($enrolment, $username, $password, $email, $phone_no, $semester,
        $gender){
        try {

            $result = $this->getByEnrolment($enrolment);

            if($result['num'] > 0) {
                return false;
            }else {

                $new_passwd = sha1($password.$username);

                $username = strtolower(trim($username));

                $sql = "INSERT INTO student (enrolment_no, username, email, phone_no, password,semester, gender) VALUES (:enrol, :username, :email, :phone_no , :passwd, :sem, :gender)";

                $stmt = $this->db->prepare($sql);

                $stmt->bindParam(":enrol", $enrolment);
                $stmt->bindParam(":email", $email);
                $stmt->bindParam(":username", $username);
                $stmt->bindParam(":phone_no", $phone_no);
                $stmt->bindParam(":passwd", $new_passwd);
                $stmt->bindParam(":sem", $semester);
                $stmt->bindParam(":gender", $gender);

                $stmt->execute();

                return true;
            }
        }catch (PDOException $e){
            echo $e->getMessage();
            return false;
        }
    }

    public function getUser($enrolment, $password){
        try{

            $result = $this->getUsername($enrolment);

            $username = "";
            //Error generated by this line
            if($result){
              $username = $result['username'];
            }else{
              return false;
            }
            // echo print_r($username);

            $new_passwd = sha1($password.$username);

            $sql = "SELECT * FROM student WHERE enrolment_no = :enrol AND password = :pass";

            $stmt = $this->db->prepare($sql);

            $stmt->bindParam(':enrol', $enrolment);
            $stmt->bindParam(':pass', $new_passwd);

            $stmt->execute();

            $result = $stmt->fetch(PDO::FETCH_ASSOC);

            return $result;

        }catch (PDOException $e){
            echo $e->getMessage();
            return false;
        }
    }

    public function getUserforIndex($enrolment){
        try{

            // $result = $this->getUsername($enrolment);

            // $username = "";
            //Error generated by this line
            // if($result){
              // $username = $result['username'];
            // }else{
              // return false;
            // }
            // echo print_r($username);

            $sql = "SELECT enrolment_no, username, email, phone_no, semester,
             gender FROM student WHERE enrolment_no = :enrol";

            $stmt = $this->db->prepare($sql);

            $stmt->bindParam(':enrol', $enrolment);
            // $stmt->bindParam(':pass', $new_passwd);

            $stmt->execute();

            $result = $stmt->fetch(PDO::FETCH_ASSOC);

            return $result;

        }catch (PDOException $e){
            echo $e->getMessage();
            return false;
        }
    }

    public function getByEnrolment($enrolment){
        try{
            $sql = "SELECT COUNT(*) AS num FROM student WHERE enrolment_no = :enrol";

            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':enrol', $enrolment);

            $stmt->execute();
            $result = $stmt->fetch(PDO::FETCH_ASSOC);

            return $result;

        }catch(PDOException $e) {
            echo $e->getMessage();
            return false;
        }
    }

    public function getUsername($enrolment){
        try{
            $sql = "SELECT username FROM student WHERE enrolment_no = :enrol";

            $stmt = $this->db->prepare($sql);
            $stmt->bindParam(':enrol', $enrolment);

            $stmt->execute();

            $result = $stmt->fetch(PDO::FETCH_ASSOC);

            return $result;

        }catch(PDOException $e){
            echo $e->getMessage();
        }
    }
}
